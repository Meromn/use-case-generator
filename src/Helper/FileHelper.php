<?php

namespace Meromn\UseCaseGenerator\Helper;

final class FileHelper
{
    /**
     * @param string $basePath
     * @return bool
     */
    public static function isFolderOrFileExist(string $basePath): bool
    {
        return file_exists($basePath);
    }

    /**
     * @param string $folderPath
     * @return bool
     * @throws \Exception
     */
    public static function createFolderIfNotExist(string $folderPath): bool
    {
        $useCaseFolderAlreadyExist = self::isFolderOrFileExist($folderPath);
        if ($useCaseFolderAlreadyExist) {
            return true;
        }
        return mkdir($folderPath);
    }

    /**
     * @param string $filePath
     * @param string $namespace
     * @return void
     */
    public static function createFileIfNotExist(string $filePath, string $namespace): void
    {
        $fileExist = self::isFolderOrFileExist($filePath);
        if ($fileExist) {
            return;
        }
        touch($filePath);
        $pathArray = explode('/', $filePath);
        $className = basename(end($pathArray), '.php');
        self::appendBaseTextToFile($filePath, $className, $namespace);
    }

    /**
     * @param string $filePath
     * @param string $className
     * @param string $namespace
     * @param string|null $requestName
     * @param string|null $responseName
     * @return void
     */
    public static function appendBaseTextToFile(
        string $filePath,
        string $className,
        string $namespace,
        string $requestName = null,
        string $responseName = null
    ): void {
        $useClasses = "\n\n";
        $executeFunction = '';
        if ($requestName !== null && $responseName !== null) {
            $useClasses .= "use $namespace\\$requestName;\n" .
                "use $namespace\\$responseName;\n\n";
            $executeFunction .= "\n\n    public function execute(Request \$request): Response\n" .
                "    {\n" .
                "        return new Response();\n" .
                "    }";
        }
        $string = "<?php \n\nnamespace $namespace;$useClasses" .
            "final class $className\n" .
            "{\n    public function __construct()\n    {\n" .
            "        // TODO: Change the autogenerated stub \n    }$executeFunction\n}";
        file_put_contents($filePath, $string);
    }
}